# no PR builds
pr: none

variables:
  BuildRevision: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
jobs:
  - job: Build
    displayName: "Build and Push Docker Image to Container Registry"
    timeoutInMinutes: 20
    pool:
      name: Hosted Ubuntu 1604
    steps:
    - task: PowerShell@2
      displayName: Set build number
      inputs:
        targetType: inline
        script: |
          if("$(Build.SourceBranch)" -eq "refs/heads/master") {
              Write-Host "##vso[build.updatebuildnumber]$((Get-Date).ToString('yy.%M.%d'))-master.$(BuildRevision)"
          } elseif("$(Build.SourceBranch)" -eq "refs/heads/develop") {
              Write-Host "##vso[build.updatebuildnumber]$((Get-Date).ToString('yy.%M.%d'))-develop.$(BuildRevision)"
          } else {
              Write-Host "##vso[build.updatebuildnumber]$((Get-Date).ToString('yy.%M.%d'))-feature.$(BuildRevision)"
          }

    - task: PowerShell@2
      displayName: Establish docker image tag
      inputs:
        targetType: inline
        script: |
          if([string]::IsNullOrEmpty("$(dockerTag)")) {
              Write-Host "##vso[task.setvariable variable=dockerTag;]$(Build.BuildNumber)"
          }

    - task: PowerShell@2
      displayName: Docker login, build, push and logout
      inputs:
        targetType: inline
        script: |
          docker login $(ContainerRegistry_Name) --username $(ContainerRegistry_User) --password $(ContainerRegistry_Password)
          docker build --tag $(ContainerRegistry_Name)/$(ContainerRegistry_RepoName):$(dockerTag) .
          docker push $(ContainerRegistry_Name)/$(ContainerRegistry_RepoName):$(dockerTag)
          docker logout $(ContainerRegistry_Name)
        workingDirectory: $(Build.SourcesDirectory)/Experiments/WebApplication1